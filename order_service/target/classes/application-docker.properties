spring.datasource.url=jdbc:postgresql://postgres-order:5431/order-service
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=admin
spring.datasource.password=admin
server.port = 8080
#server.port = 0
#DO NOT DO BELOW IN PRODUCTION {especially create-drop}
spring.jpa.hibernate.ddl-auto=update


##Zipkin
management.zipkin.tracing.endpoint=http://zipkin:9411
management.tracing.sampling.probability=1.0

##Eureka
eureka.instance.prefer-ip-address=true
eureka.instance.non-secure-port=0
eureka.instance.instance-id==${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id}
eureka.client.serviceUrl.defaultZone=http://eureka:password@discovery-server:8761/eureka

##Resilience4j
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.timelimiter.instances.inventory.timeout-duration=3s
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s


##Actuator
management.health.circuitbreakers.enabled=true
#To expose all the endpoints->
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
## Actuator Prometheus expose
#management.endpoints.web.exposure.include = prometheus

##Kafka
spring.kafka.bootstrap-servers=broker:29092
#spring.kafka.template.default-topic=notificationTopic  #this can be used to set default topic unless explicitly defined
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.dreamfist.order_service.event.OrderCreatedEvent
